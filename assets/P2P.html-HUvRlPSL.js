import{_ as a}from"./Proxy pattern - P2P-Ddrix9z4.js";import{_ as r,c as s,b as t,o as i}from"./app-B4RDuWFj.js";const n={};function o(l,e){return i(),s("div",null,e[0]||(e[0]=[t('<h1 id="p2p-flow-across-network-using-proxy" tabindex="-1"><a class="header-anchor" href="#p2p-flow-across-network-using-proxy"><span>P2P flow across network using Proxy</span></a></h1><p>This design make the following assumptions</p><ol><li>No two connected participant have the same identifier</li><li>No limit checks are done against proxy participants</li><li>Get \\transfers request are resolved at the payee scheme</li><li>Timeouts in non-payee schemes are disabled.</li></ol><h2 id="sequence-diagram" tabindex="-1"><a class="header-anchor" href="#sequence-diagram"><span>Sequence Diagram</span></a></h2><p>Here is a sequence diagram show the Agreement and Transfer stages of a transaction, and how the Get Transfer is resolved.</p><p><img src="'+a+'" alt="P2P flow"></p>',6)]))}const p=r(n,[["render",o],["__file","P2P.html.vue"]]),h=JSON.parse('{"path":"/Inter-SchemeDesign/P2P.html","title":"P2P flow across network using Proxy","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Sequence Diagram","slug":"sequence-diagram","link":"#sequence-diagram","children":[]}],"git":{"updatedTime":1732302442000,"contributors":[{"name":"PaulGregoryBaker","email":"paul.gregory.baker@gmail.com","commits":1,"url":"https://github.com/PaulGregoryBaker"}]},"filePathRelative":"Inter-SchemeDesign/P2P.md"}');export{p as comp,h as data};
